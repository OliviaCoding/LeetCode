/*
118. Pascal's Triangle
Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
Example 2:

Input: numRows = 1
Output: [[1]]
*/
class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> ans = new ArrayList<>();
        for(int i=0; i<numRows; i++){
            ans.add(pascal(i));
        }
        return ans;
    }
        public static List<Integer> pascal(int rowIndex){
            List<Integer> row = new ArrayList<>();
            if(rowIndex == 0){
            row.add(1);
            return row;

        } else {
            row.add(1);
            List<Integer> prevRow = pascal(rowIndex - 1);
            for(int i = 1; i < rowIndex; i++){
                row.add(prevRow.get(i-1) + prevRow.get(i)); 
            }
            row.add(1);
            return row;
            }
        }
        
}
